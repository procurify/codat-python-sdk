# coding: utf-8

"""
    Codat API

    [What's changed in our Swagger](https://docs.codat.io/docs/new-swagger-ui)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CodatDataContractsDatasetsCommerceTransaction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'total_amount': 'float',
        'currency': 'str',
        'type': 'CodatDataContractsDatasetsCommercePlatformTransactionType',
        'transaction_source_ref': 'CodatDataContractsDatasetsCommerceTransactionSourceRef',
        'created_date': 'datetime',
        'modified_date': 'datetime',
        'source_modified_date': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'total_amount': 'totalAmount',
        'currency': 'currency',
        'type': 'type',
        'transaction_source_ref': 'transactionSourceRef',
        'created_date': 'createdDate',
        'modified_date': 'modifiedDate',
        'source_modified_date': 'sourceModifiedDate'
    }

    def __init__(self, id=None, total_amount=None, currency=None, type=None, transaction_source_ref=None, created_date=None, modified_date=None, source_modified_date=None):  # noqa: E501
        """CodatDataContractsDatasetsCommerceTransaction - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._total_amount = None
        self._currency = None
        self._type = None
        self._transaction_source_ref = None
        self._created_date = None
        self._modified_date = None
        self._source_modified_date = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if total_amount is not None:
            self.total_amount = total_amount
        if currency is not None:
            self.currency = currency
        if type is not None:
            self.type = type
        if transaction_source_ref is not None:
            self.transaction_source_ref = transaction_source_ref
        if created_date is not None:
            self.created_date = created_date
        if modified_date is not None:
            self.modified_date = modified_date
        if source_modified_date is not None:
            self.source_modified_date = source_modified_date

    @property
    def id(self):
        """Gets the id of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The id of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodatDataContractsDatasetsCommerceTransaction.


        :param id: The id of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def total_amount(self):
        """Gets the total_amount of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The total_amount of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: float
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this CodatDataContractsDatasetsCommerceTransaction.


        :param total_amount: The total_amount of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: float
        """

        self._total_amount = total_amount

    @property
    def currency(self):
        """Gets the currency of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The currency of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this CodatDataContractsDatasetsCommerceTransaction.


        :param currency: The currency of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def type(self):
        """Gets the type of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The type of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: CodatDataContractsDatasetsCommercePlatformTransactionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CodatDataContractsDatasetsCommerceTransaction.


        :param type: The type of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: CodatDataContractsDatasetsCommercePlatformTransactionType
        """

        self._type = type

    @property
    def transaction_source_ref(self):
        """Gets the transaction_source_ref of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The transaction_source_ref of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: CodatDataContractsDatasetsCommerceTransactionSourceRef
        """
        return self._transaction_source_ref

    @transaction_source_ref.setter
    def transaction_source_ref(self, transaction_source_ref):
        """Sets the transaction_source_ref of this CodatDataContractsDatasetsCommerceTransaction.


        :param transaction_source_ref: The transaction_source_ref of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: CodatDataContractsDatasetsCommerceTransactionSourceRef
        """

        self._transaction_source_ref = transaction_source_ref

    @property
    def created_date(self):
        """Gets the created_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The created_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this CodatDataContractsDatasetsCommerceTransaction.


        :param created_date: The created_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: datetime
        """

        self._created_date = created_date

    @property
    def modified_date(self):
        """Gets the modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this CodatDataContractsDatasetsCommerceTransaction.


        :param modified_date: The modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: datetime
        """

        self._modified_date = modified_date

    @property
    def source_modified_date(self):
        """Gets the source_modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501


        :return: The source_modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :rtype: datetime
        """
        return self._source_modified_date

    @source_modified_date.setter
    def source_modified_date(self, source_modified_date):
        """Sets the source_modified_date of this CodatDataContractsDatasetsCommerceTransaction.


        :param source_modified_date: The source_modified_date of this CodatDataContractsDatasetsCommerceTransaction.  # noqa: E501
        :type: datetime
        """

        self._source_modified_date = source_modified_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CodatDataContractsDatasetsCommerceTransaction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodatDataContractsDatasetsCommerceTransaction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
