# coding: utf-8

"""
    Codat API

    [What's changed in our Swagger](https://docs.codat.io/docs/new-swagger-ui)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CodatPublicApiModelsClientsClientCompanyMetricsModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'currently_linked': 'int',
        'no_longer_linked': 'int',
        'not_yet_linked': 'int',
        'all_time_linked': 'int'
    }

    attribute_map = {
        'currently_linked': 'currentlyLinked',
        'no_longer_linked': 'noLongerLinked',
        'not_yet_linked': 'notYetLinked',
        'all_time_linked': 'allTimeLinked'
    }

    def __init__(self, currently_linked=None, no_longer_linked=None, not_yet_linked=None, all_time_linked=None):  # noqa: E501
        """CodatPublicApiModelsClientsClientCompanyMetricsModel - a model defined in Swagger"""  # noqa: E501
        self._currently_linked = None
        self._no_longer_linked = None
        self._not_yet_linked = None
        self._all_time_linked = None
        self.discriminator = None
        if currently_linked is not None:
            self.currently_linked = currently_linked
        if no_longer_linked is not None:
            self.no_longer_linked = no_longer_linked
        if not_yet_linked is not None:
            self.not_yet_linked = not_yet_linked
        if all_time_linked is not None:
            self.all_time_linked = all_time_linked

    @property
    def currently_linked(self):
        """Gets the currently_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501


        :return: The currently_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :rtype: int
        """
        return self._currently_linked

    @currently_linked.setter
    def currently_linked(self, currently_linked):
        """Sets the currently_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.


        :param currently_linked: The currently_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :type: int
        """

        self._currently_linked = currently_linked

    @property
    def no_longer_linked(self):
        """Gets the no_longer_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501


        :return: The no_longer_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :rtype: int
        """
        return self._no_longer_linked

    @no_longer_linked.setter
    def no_longer_linked(self, no_longer_linked):
        """Sets the no_longer_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.


        :param no_longer_linked: The no_longer_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :type: int
        """

        self._no_longer_linked = no_longer_linked

    @property
    def not_yet_linked(self):
        """Gets the not_yet_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501


        :return: The not_yet_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :rtype: int
        """
        return self._not_yet_linked

    @not_yet_linked.setter
    def not_yet_linked(self, not_yet_linked):
        """Sets the not_yet_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.


        :param not_yet_linked: The not_yet_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :type: int
        """

        self._not_yet_linked = not_yet_linked

    @property
    def all_time_linked(self):
        """Gets the all_time_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501


        :return: The all_time_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :rtype: int
        """
        return self._all_time_linked

    @all_time_linked.setter
    def all_time_linked(self, all_time_linked):
        """Sets the all_time_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.


        :param all_time_linked: The all_time_linked of this CodatPublicApiModelsClientsClientCompanyMetricsModel.  # noqa: E501
        :type: int
        """

        self._all_time_linked = all_time_linked

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CodatPublicApiModelsClientsClientCompanyMetricsModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodatPublicApiModelsClientsClientCompanyMetricsModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
