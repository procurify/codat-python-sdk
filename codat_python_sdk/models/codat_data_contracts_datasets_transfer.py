# coding: utf-8

"""
    Codat API

    [What's changed in our Swagger](https://docs.codat.io/docs/new-swagger-ui)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CodatDataContractsDatasetsTransfer(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'description': 'str',
        'contact_ref': 'CodatDataContractsDatasetsContactRef',
        '_date': 'datetime',
        '_from': 'CodatDataContractsDatasetsFromAccount',
        'to': 'CodatDataContractsDatasetsToAccount',
        'tracking_category_refs': 'list[CodatDataContractsDatasetsTrackingCategoryRef]',
        'modified_date': 'datetime',
        'source_modified_date': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'description': 'description',
        'contact_ref': 'contactRef',
        '_date': 'date',
        '_from': 'from',
        'to': 'to',
        'tracking_category_refs': 'trackingCategoryRefs',
        'modified_date': 'modifiedDate',
        'source_modified_date': 'sourceModifiedDate'
    }

    def __init__(self, id=None, description=None, contact_ref=None, _date=None, _from=None, to=None, tracking_category_refs=None, modified_date=None, source_modified_date=None):  # noqa: E501
        """CodatDataContractsDatasetsTransfer - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._description = None
        self._contact_ref = None
        self.__date = None
        self.__from = None
        self._to = None
        self._tracking_category_refs = None
        self._modified_date = None
        self._source_modified_date = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if description is not None:
            self.description = description
        if contact_ref is not None:
            self.contact_ref = contact_ref
        if _date is not None:
            self._date = _date
        if _from is not None:
            self._from = _from
        if to is not None:
            self.to = to
        if tracking_category_refs is not None:
            self.tracking_category_refs = tracking_category_refs
        if modified_date is not None:
            self.modified_date = modified_date
        if source_modified_date is not None:
            self.source_modified_date = source_modified_date

    @property
    def id(self):
        """Gets the id of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The id of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CodatDataContractsDatasetsTransfer.


        :param id: The id of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def description(self):
        """Gets the description of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The description of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CodatDataContractsDatasetsTransfer.


        :param description: The description of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def contact_ref(self):
        """Gets the contact_ref of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The contact_ref of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: CodatDataContractsDatasetsContactRef
        """
        return self._contact_ref

    @contact_ref.setter
    def contact_ref(self, contact_ref):
        """Sets the contact_ref of this CodatDataContractsDatasetsTransfer.


        :param contact_ref: The contact_ref of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: CodatDataContractsDatasetsContactRef
        """

        self._contact_ref = contact_ref

    @property
    def _date(self):
        """Gets the _date of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The _date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CodatDataContractsDatasetsTransfer.


        :param _date: The _date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def _from(self):
        """Gets the _from of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The _from of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: CodatDataContractsDatasetsFromAccount
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this CodatDataContractsDatasetsTransfer.


        :param _from: The _from of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: CodatDataContractsDatasetsFromAccount
        """

        self.__from = _from

    @property
    def to(self):
        """Gets the to of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The to of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: CodatDataContractsDatasetsToAccount
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this CodatDataContractsDatasetsTransfer.


        :param to: The to of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: CodatDataContractsDatasetsToAccount
        """

        self._to = to

    @property
    def tracking_category_refs(self):
        """Gets the tracking_category_refs of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The tracking_category_refs of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: list[CodatDataContractsDatasetsTrackingCategoryRef]
        """
        return self._tracking_category_refs

    @tracking_category_refs.setter
    def tracking_category_refs(self, tracking_category_refs):
        """Sets the tracking_category_refs of this CodatDataContractsDatasetsTransfer.


        :param tracking_category_refs: The tracking_category_refs of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: list[CodatDataContractsDatasetsTrackingCategoryRef]
        """

        self._tracking_category_refs = tracking_category_refs

    @property
    def modified_date(self):
        """Gets the modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this CodatDataContractsDatasetsTransfer.


        :param modified_date: The modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: datetime
        """

        self._modified_date = modified_date

    @property
    def source_modified_date(self):
        """Gets the source_modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501


        :return: The source_modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :rtype: datetime
        """
        return self._source_modified_date

    @source_modified_date.setter
    def source_modified_date(self, source_modified_date):
        """Sets the source_modified_date of this CodatDataContractsDatasetsTransfer.


        :param source_modified_date: The source_modified_date of this CodatDataContractsDatasetsTransfer.  # noqa: E501
        :type: datetime
        """

        self._source_modified_date = source_modified_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CodatDataContractsDatasetsTransfer, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodatDataContractsDatasetsTransfer):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
